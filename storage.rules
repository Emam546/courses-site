rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    function isAuthUser(){
        return request.auth!=null && request.auth.token.email_verified==true;
    }
    function isAdmin(){
        return isAuthUser() && request.auth.token.type=="admin";
    }
    function isCreator(){
        return isAuthUser() && (request.auth.token.type=="admin" || request.auth.token.type=="creator");
    }
    function validImage(){
        return request.resource.contentType.matches('image/.*');
    }
  
    match /{allPaths=**} {
      allow read, write:if false;
    }
    match /Teachers/{userId}{
      match /profile {
          function ownsDoc(){
            return userId==request.auth.uid;
          }
          // Only allow uploads of any image file that's less than 5MB
          allow read:if true;
          allow create: if isAuthUser()&& validImage() && ownsDoc();
          allow update: if isAuthUser()&& validImage() && ownsDoc();
          allow delete: if isAuthUser() && ownsDoc();
      }
    }
  }
}
